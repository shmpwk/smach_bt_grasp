#! /usr/bin/env roseus

(ros::load-ros-manifest "actionlib_msgs")
(ros::load-ros-manifest "behavior_tree_core")
(ros::roseus "grasp_server")
(require "package://grasp_demo/euslisp/grasp_primitive.l")

(defun pick-cb (server goal)
  (print "pick")
  (pr2-pregrasp-pose)                   
  (setq input (send goal :goal :parameter))
  (setq fmsg (send server :feedback :status 1))
  (send server :publish-feedback fmsg)
  (setq msg (send server :result :status 1))
  (send server :set-succeeded msg)
  (unix:sleep 1)
  (print "pregrasp end")                   
)

(defun grasp-cb (server goal)
  (print "grasp start")
  (grasp-target-callback)                   
  (setq input (send goal :goal :parameter))
  (setq fmsg (send server :feedback :status 1))
  (send server :publish-feedback fmsg)
  (setq msg (send server :result :status 1))
  (send server :set-succeeded msg)
  (unix:sleep 1)
  (print "grasp end")                   
)
(defun bt-pick ()
  (setq *pick* (instance ros::simple-action-server :init "pick" behavior_tree_core::BTAction :execute-cb 'pick-cb))
  (print "pick!!")                   
)
(defun bt-search ()
  (setq *search* (instance ros::simple-action-server :init "search" behavior_tree_core::BTAction :execute-cb 'search-cb))
  (print "search!!")                   
)
(defun bt-finish ()
  (setq *finish* (instance ros::simple-action-server :init "finish" behavior_tree_core::BTAction :execute-cb 'finish-cb))
  (print "finish!!")                   
)
(bt-pick)
(bt-search)
(bt-finish)

(do-until-key
  (send *pick* :worker)
  (send *search* :worker)
;;  (ros::spin)  
  (ros::spin-once)
  (ros::sleep)
)


